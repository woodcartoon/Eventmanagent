
import com.sun.jdi.connect.spi.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ntsak
 */
public class EventPlanning extends javax.swing.JFrame {

   
    public EventPlanning() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        OrganiserContact = new javax.swing.JTextField();
        EventDescription = new javax.swing.JTextField();
        OrganiserName = new javax.swing.JTextField();
        EventName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Createbtn = new javax.swing.JButton();
        Viewbtn = new javax.swing.JButton();
        Updatebtn = new javax.swing.JButton();
        Deletebtn = new javax.swing.JButton();
        NextFramebtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        DateChooser = new com.toedter.calendar.JDateChooser();
        TimeField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 0, 255));
        setForeground(java.awt.Color.orange);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("EVENTPLANNING");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("EVENT NAME");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("EVENT DESCRIPTION");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("ORGANISER NAME");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("ORGANISER CONTACT");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Name", "Event Description", "Organiser Name", "Organiser Contact", "Date", "Time"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        EventName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventNameActionPerformed(evt);
            }
        });

        jLabel6.setText("Date");

        Createbtn.setText("Create");
        Createbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreatebtnActionPerformed(evt);
            }
        });

        Viewbtn.setText("View");
        Viewbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewbtnActionPerformed(evt);
            }
        });

        Updatebtn.setText("Update");
        Updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatebtnActionPerformed(evt);
            }
        });

        Deletebtn.setText("Delete");
        Deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebtnActionPerformed(evt);
            }
        });

        NextFramebtn.setText("Next Frame");
        NextFramebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextFramebtnActionPerformed(evt);
            }
        });

        jLabel7.setText("Time");

        TimeField.setToolTipText("HH:MM:SS");
        TimeField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TimeFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TimeFieldFocusLost(evt);
            }
        });
        TimeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(50, 50, 50)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(OrganiserContact, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                            .addComponent(EventDescription)
                            .addComponent(OrganiserName)
                            .addComponent(EventName))
                        .addGap(176, 176, 176)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TimeField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Createbtn)
                                .addGap(43, 43, 43)
                                .addComponent(Viewbtn)
                                .addGap(40, 40, 40)
                                .addComponent(Updatebtn)
                                .addGap(54, 54, 54)
                                .addComponent(Deletebtn)
                                .addGap(67, 67, 67)
                                .addComponent(NextFramebtn))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(EventDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(OrganiserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(OrganiserContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(TimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EventName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Createbtn)
                    .addComponent(Viewbtn)
                    .addComponent(Updatebtn)
                    .addComponent(Deletebtn)
                    .addComponent(NextFramebtn))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void clear(){
      DefaultTableModel table = (DefaultTableModel)jTable1.getModel();
        table.setRowCount(0);}


    private void CreatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreatebtnActionPerformed
      clear(); 
      String eventname = EventName.getText();
       String eventdescription = EventDescription.getText();
        String organisername = OrganiserName.getText();
         String organisercontact = OrganiserContact.getText();
         Date eventdate = DateChooser.getDate();
     String eventtime = TimeField.getText();
     
     if( EventName.getText().isEmpty() ||
            EventDescription.getText().isEmpty() ||
            OrganiserName.getText().isEmpty() ||
            OrganiserContact.getText().isEmpty() ||
            DateChooser.getDate() == null ||
            TimeField.getText().isEmpty()) {
         JOptionPane.showMessageDialog(null, "InputField Empty");
         return;
     }

      try {  
          
          
            Class.forName("com.mysql.cj.jdbc.Driver");
            java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/event_planner", "root", "Boitekong2003");
            String SQL = "INSERT INTO event_table(Event_Name,Event_Description, Organiser_Name, Organiser_Contact, Event_Date, Event_Time) VALUES (?,?, ?, ?, ?, ?)";
            PreparedStatement STATE= con.prepareCall(SQL);
            

            STATE.setString(1, EventName.getText());
            STATE.setString(2, EventDescription.getText());
            STATE.setString(3, OrganiserName.getText());
            STATE.setString(4, OrganiserContact.getText());
         STATE.setDate(5, new java.sql.Date(DateChooser.getDate().getTime()));
STATE.setString(6, TimeField.getText());
            STATE.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully inserted the data to the database");}
catch (Exception e) {
        if (((SQLException) e).getErrorCode()==1062) {
JOptionPane.showMessageDialog(null,"Duplicate Entry");
}else {
      JOptionPane.showMessageDialog(null, "SQL Error "+e.getMessage());      
        }
}

    
    }//GEN-LAST:event_CreatebtnActionPerformed

    private void ViewbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewbtnActionPerformed
   
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/event_planner", "root", "Boitekong2003");
        
        Statement stm = con.createStatement();
        String  sql = "SELECT * FROM event_table";
        ResultSet result = stm.executeQuery(sql);
        while(result.next()){
            
            String EventName = result.getString("Event_Name");
               String EventDescription = result.getString("Event_Description");
                  String OrganiserName = result.getString("Organiser_Name");
                     String OrganiserContact = result.getString("Organiser_Contact"); 
                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
  Date eventDate = result.getDate("Event_Date");
  String Date = dateFormat.format(eventDate);

  SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
  Time eventTime = result.getTime("Event_Time");
  String Time = timeFormat.format(eventTime);

  String[] tableData = {EventName, EventDescription, OrganiserName, OrganiserContact, Date, Time};
  DefaultTableModel table = (DefaultTableModel) jTable1.getModel();
  table.addRow(tableData);
                     
        }
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, ex);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex); 
        }
    }//GEN-LAST:event_ViewbtnActionPerformed

    private void NextFramebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextFramebtnActionPerformed
        AttendeeRegistration newframe= new AttendeeRegistration();
        newframe.setVisible(true); 
       dispose();
    }//GEN-LAST:event_NextFramebtnActionPerformed

    private void TimeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeFieldActionPerformed
        
    }//GEN-LAST:event_TimeFieldActionPerformed


    private void UpdatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatebtnActionPerformed
      clear();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/event_planner", "root", "Boitekong2003");
        String SQL = "UPDATE event_table SET Event_Name = ?, Event_Description = ?, Organiser_Name = ?, Organiser_Contact = ?, Event_Date = ?, Event_Time = ? ";
            
        PreparedStatement STATE = con.prepareStatement(SQL);
                STATE.setString(1, EventName.getText());
            STATE.setString(2, EventDescription.getText());
            STATE.setString(3, OrganiserName.getText());
            STATE.setString(4, OrganiserContact.getText());
            STATE.setDate(5, new java.sql.Date(DateChooser.getDate().getTime()));
            STATE.setString(6, TimeField.getText());
          
            
            int rowsUpdated = STATE.executeUpdate();
            if (rowsUpdated > 0) {
                
               JOptionPane.showMessageDialog(null,"Update successful");
            } else {
                
                JOptionPane.showMessageDialog(null,"Update failed");
            }
        } catch (SQLException e) {
           
         JOptionPane.showMessageDialog(null,"Error updating data: " + e.getMessage());
        } catch (ClassNotFoundException e) {
            Logger.getLogger(EventPlanning.class.getName()).log(Level.SEVERE, null, e);
        } 
        

        


    }//GEN-LAST:event_UpdatebtnActionPerformed

    private void DeletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletebtnActionPerformed
      clear();
        try {      
            Class.forName("com.mysql.cj.jdbc.Driver");
            java.sql.Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/event_planner", "root", "Boitekong2003");
           String SQL = "DELETE FROM event_table WHERE Event_Name = ?";
PreparedStatement STATE = con.prepareStatement(SQL);
            

            STATE.setString(1, EventName.getText());
            
            STATE.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully Deleted");}
catch (Exception e) {
        if (((SQLException) e).getErrorCode()==1062) {
JOptionPane.showMessageDialog(null,"file already deleted");
}else {
      JOptionPane.showMessageDialog(null, "SQL Error "+e.getMessage());      
        }
        }
            
    }//GEN-LAST:event_DeletebtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
   DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
           int row = jTable1.rowAtPoint(evt.getPoint());
       
        int rows = jTable1.getSelectedRowCount();

        if (rows == 1) {
       
        
        EventName.setText(model.getValueAt(row, 0).toString());
          EventDescription.setText(model.getValueAt(row, 1).toString());
          OrganiserName.setText(model.getValueAt(row, 2).toString());
          OrganiserContact.setText(model.getValueAt(row, 3).toString());
           Date eventDate = java.sql.Date.valueOf(jTable1.getValueAt(row, 4).toString());
            String eventTime = jTable1.getValueAt(row, 5).toString();

           
           
            DateChooser.setDate(eventDate);
            TimeField.setText(eventTime);
    
       
       }
    }//GEN-LAST:event_jTable1MouseClicked

    private void EventNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EventNameActionPerformed

    private void TimeFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TimeFieldFocusGained
     
    }//GEN-LAST:event_TimeFieldFocusGained

    private void TimeFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TimeFieldFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_TimeFieldFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EventPlanning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EventPlanning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EventPlanning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EventPlanning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EventPlanning().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Createbtn;
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JButton Deletebtn;
    private javax.swing.JTextField EventDescription;
    private javax.swing.JTextField EventName;
    private javax.swing.JButton NextFramebtn;
    private javax.swing.JTextField OrganiserContact;
    private javax.swing.JTextField OrganiserName;
    private javax.swing.JTextField TimeField;
    private javax.swing.JButton Updatebtn;
    private javax.swing.JButton Viewbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
